apply plugin: 'c'

model {
    platforms {
	x86 {
	    architecture "x86"
	}

	x64 {
	    architecture "x86_64"
	}
    }
    buildTypes {
	debug
	release
    }
    binaries {
	all {
	    if (toolChain in Gcc) {
		if (buildType == buildTypes.release) {
		    cCompiler.args "-O3", "-ffast-math", "-funroll-loops"
		} else if (buildType == buildTypes.release) {
		    cCompiler.args "-g", "-p"		    
		}
	    }
	}
    }
    components {
	nb_geometric_bot(NativeLibrarySpec) {
	    targetPlatform "x86"
	    targetPlatform "x64"
	    sources {
		c {
		    source {
			srcDir "src"
			include "**/*.c"
		    }
		    exportedHeaders {
			srcDir "include"
		    }
		}
	    }
	}
	launch_unit_tests(NativeExecutableSpec) {
	    targetPlatform "x86"
	    targetPlatform "x64"
	    sources {

	    }
	    binaries.all {
		lib library: 'nb_geometric_bot', linkage: 'shared'
	    }
	}
    }
    tasks {
        buildAllExecutables(Task) {
            dependsOn $.binaries.findAll { it.buildable }
        }
    }
    task wrapper(type: Wrapper) {
	gradleVersion = '2.0'
    }
}
